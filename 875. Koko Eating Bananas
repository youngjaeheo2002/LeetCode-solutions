https://leetcode.com/problems/koko-eating-bananas/submissions/1203851830/

class Solution:
    def minEatingSpeed(self, piles: List[int], h: int) -> int:
        import numpy as np
        l,r = 1,max(piles)
        min_possible = max(piles)
        
        while(l<=r):

            mid = (l + r)//2

            totalTime = 0
            for p in piles:
                totalTime += math.ceil(float(p) / mid)

            if totalTime <=h:
                min_possible = mid
                r = mid -1
            else:
                l = mid + 1

        return min_possible

        
            

