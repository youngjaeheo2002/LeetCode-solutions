https://leetcode.com/problems/min-cost-to-connect-all-points/submissions/1202119281/

class Solution:
    def minCostConnectPoints(self, points: List[List[int]]) -> int:
        N = len(points)
        adj = {i: [] for i in range(N)}  # i : list of [cost, node]
        for i in range(N):
            x1, y1 = points[i]
            for j in range(i + 1, N):
                x2, y2 = points[j]
                dist = abs(x1 - x2) + abs(y1 - y2)
                adj[i].append([dist, j])
                adj[j].append([dist, i])

        res = 0

        minH = [[0,0]]
        visited = set()

        while(len(visited) < N):
            cost,i = heappop(minH)

            if i in visited:
                continue

            res += cost
            visited.add(i)

            for edge in adj[i]:
                if edge[1] not in visited:
                    heappush(minH,edge)

        return res

    
