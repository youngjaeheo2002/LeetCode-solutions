https://leetcode.com/problems/minimum-window-substring/submissions/1198918333/

class Solution:
    def minWindow(self, s: str, t: str) -> str:

        if len(t) > len(s):
            return ""
        s_dict = {
        }
        start = 0
        end = 0
        t_dict = {

        }
        for char in t:
            if char not in t_dict:
                t_dict[char] = 1
            else:
                t_dict[char] += 1

        def t_in_s():
            for char in t_dict:
                if char not in s_dict or s_dict[char] < t_dict[char]:
                    return False

            return True

        def add_to_s_dict(char):
            if char not in s_dict:
                s_dict[char] = 1
            else:
                s_dict[char] += 1

            return s_dict

        def remove_from_s_dict(char):
            if char in s_dict:
                s_dict[char] -=1
        start = 0
        end = 0
        smallest_str = ""
        while(end < len(s)):

            if not t_in_s():
                add_to_s_dict(s[end])
                end += 1

                if (t_in_s()):
                    
                    while(t_in_s()):

                        if (end - start ) < len(smallest_str) or smallest_str == "":
                            smallest_str = s[start:end]
                        remove_from_s_dict(s[start])
                        start+=1


        return smallest_str





