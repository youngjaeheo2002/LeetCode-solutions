https://leetcode.com/problems/count-good-nodes-in-binary-tree/submissions/1200795795/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def goodNodes(self, root: TreeNode) -> int:
        smallest_limit = -(10 ** 4) -1

        def helper(root,max_seen):
            if not root:
                return 0

            if root.val >= max_seen:
                left = helper(root.left,root.val)
                right = helper(root.right,root.val)

                return 1 + left + right

            else:
                left = helper(root.left,max_seen)
                right = helper(root.right,max_seen)

                return 0 + left + right

        return helper(root,smallest_limit)

