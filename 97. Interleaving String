https://leetcode.com/problems/interleaving-string/submissions/1188263880/

class Solution:
    def isInterleave(self, s1: str, s2: str, s3: str) -> bool:
        import numpy as np
        if len(s1) + len(s2) > len(s3):
            return False
        if len(s1) == 0:
            return s2 == s3


        if len(s2) == 0:
            return s1 == s3
        m = np.zeros((len(s2)+1,len(s1)+1))
        
        #do right most column

        for i in range(len(s2)):
            m[i][-1] = (s2[i:] == s3[len(s1) + i:])

        #do bottom most row

        for i in range(len(s1)):
            m[-1][i] = (s1[i:] == s3[len(s2)+i:])
        
        
        #use the dynamic portion of the problem

        for i in range(len(s2)-1,-1,-1):
            for j in range(len(s1)-1,-1,-1):
                s3_idx = i + j
                m[i][j] = (s1[j] == s3[s3_idx] and m[i][j+1])\
                or (s2[i] == s3[s3_idx] and m[i+1][j])

        return bool(m[0][0])


