https://leetcode.com/problems/insert-interval/submissions/1193258137/

class Solution:
    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:

        if not intervals:
            return [newInterval]
        
        if newInterval[1] < intervals[0][0]:
            return [newInterval] + intervals

        if newInterval[0] > intervals[-1][1]:
            return intervals + [newInterval]


        if newInterval[0] <= intervals[0][0] and newInterval[1] >= intervals[-1][1]:
            return [newInterval]
        
        largest_smaller = intervals[0]
        smallest_larger = intervals[0]
        found = False
        for interval in intervals:
            if interval[0] <= newInterval[1]:
                largest_smaller = interval

            if interval[1] >= newInterval[0] and (not found):
                smallest_larger = interval
                found = True
        print(largest_smaller,smallest_larger)
        
        interval_start = min(smallest_larger[0],newInterval[0])
        interval_end = max(largest_smaller[1],newInterval[1])

        if newInterval[0] > largest_smaller[1] and newInterval[1] < smallest_larger[0]:
            for i in range(len(intervals)):
                if intervals[i][0] > newInterval[1]:
                    return intervals[:i] + [newInterval] + intervals[i:]

        added = False
        returnVal = []
        for interval in intervals:
            if interval[1] < interval_start or interval[0] > interval_end:
                returnVal.append(interval)

            else:
                if not added:
                    returnVal.append([interval_start,interval_end])
                    added = True

        return returnVal


            

